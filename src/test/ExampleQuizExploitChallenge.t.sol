pragma solidity 0.8.4;

import "forge-std/Test.sol";
import "../ExampleQuizExploitChallenge/target/ExampleQuizExploitChallenge.sol";
import "../ExampleQuizExploitChallenge/exploit/ExampleQuizExploit.sol";

contract ExampleQuizExploitChallengeTest is Test {
    ExampleQuizExploitChallenge public exampleQuizExploitChallenge;
    ExampleQuizExploit public exampleQuizExploit;

    function setUp() public payable {
        exampleQuizExploitChallenge = new ExampleQuizExploitChallenge{
            value: 1 ether
        }();
        exampleQuizExploit = new ExampleQuizExploit(
            address(exampleQuizExploitChallenge)
        );
    }

    function testExploit() public payable {
        assertTrue(address(exampleQuizExploitChallenge).balance == 1 ether);
        exampleQuizExploit.exploit{value: 1 ether}();
        assertTrue(address(exampleQuizExploitChallenge).balance == 0, "exploit failed");
    }
}
